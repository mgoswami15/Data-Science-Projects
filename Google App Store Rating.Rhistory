setwd("C:\\1st Semester\\ITM-527 Data Analytics\\Project")
myData = read.csv(file = "googleplaystore.csv", header = TRUE, sep = ",")
str(myData)
indices = which(myData$Rating == 19)
indices
summary(myData$Rating)
myData1 = myData[c(-10473), c(-10)]
sum(is.na(myData1$Rating))
myData1$Rating<-ifelse(is.na(myData1$Rating),mean(myData1$Rating,na.rm = TRUE),myData1$Rating)
sum(is.na(myData1$Rating))
myData1$Reviews = as.numeric(myData1$Reviews)
myData1$Size = gsub("M", "", myData1$Size)
myData1$Size = ifelse(grepl("k", myData1$Size), 0, as.numeric(myData1$Size))
str(myData1)
myData1[1,5]
myData1[59,]
head(myData1$Size)
sum(is.na(myData1$Size))
myData1$Size<-ifelse(is.na(myData1$Size),mean(myData1$Size,na.rm = TRUE),myData1$Size)
library(stringr)
myData1$Installs <- str_replace_all(myData1$Installs,"[+]","")
myData1$Installs <- str_replace_all(myData1$Installs,",","")
head(myData1$Installs)
myData1$Installs = as.numeric(myData1$Installs)
head(myData1$Installs)
sum(is.na(myData1$Type))
sum(is.nan(myData1$Type))
indices = which(myData$Rating == "NaN")
indices
myData1$Type <- str_replace(myData1$Type,"NaN","Free")
myData1$Price = as.numeric(gsub("\\$", "", as.character(myData1$Price)))
indices = which(myData$Content.Rating == "Unrated")
myData1 = myData1[c(-7313, -8267), ]
myData1$Rating = round(myData1$Rating, digits = 1)
myData1$Size = round(myData1$Size, digits = 1)
myData1$Android.Ver = gsub("Varies with device", NA, myData1$Android.Ver)
myData1$Android.Ver = substr(myData1$Android.Ver, start = 1, stop = 3)
str(myData1)
myData1 = myData1[, c(-1, -10, -11, -12)]
head(myData1)
sum(is.na(myData1))
myData1<-myData1
myData1$Rating=cut(myData1$Rating,breaks = c(0,4.1,5),labels = c("Lower_Rating","Higher_Rating"))
head(myData1)
library(dummies)
myData1 = dummy.data.frame(myData1, names = c("Type"))
head(myData1)
myData1 = myData1[, c(-7)]
head(myData1)
myData1 = dummy.data.frame(myData1, names = c("Content.Rating"))
head(myData1)
myData1 = myData1[, c(-9)]
head(myData1)
myData1 = dummy.data.frame(myData1, names = c("Category"))
head(myData1)
myData1 = myData1[, c(-1)]
head(myData1)
sum(is.na(myData1))
myData1<-myData1
head(myData1)
library(lattice)
library(ggplot2)
library(caret)
set.seed(123)
num.vars = sapply(myData1, is.numeric)
myData1[num.vars] = lapply(myData1[num.vars], scale)
myData1[num.vars]
dim(num.vars)
myvars = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42)
myData1.subset = myData1[myvars]
x = myData1.subset
y = myData1$Rating
model = train(x, y, 'knn', trControl = trainControl(method = 'cv', number = 10), tuneGrid = expand.grid(k = 1:19))
print(model)
#Clone data into lg data variable
data_LR<-myData1
str(data_LR)
head(data_LR)
library(nnet)
#Find accuracy of full model
library(caret)
library(nnet)
install.packages("boot")
library(leaps)
library(boot)
str(myData1)
model_Base<-glm(Rating~Reviews,data = myData1,family=binomial())
model_LR_full<-glm(Rating~.,data = data_LR,family=binomial())
model_Fwd<-step(model_Base,scope=list(upper=model_LR_full,lower=~1),direction="forward",trace=F, family = binomial())
cv.glm(model_LR_full, data = myData1, K = 10)$delta
cv.glm(model_Fwd,data=data_LR,K=10)$delta
cv.glm(model_Base,data=data_LR,K=10)$delta
cv.glm(model_LR_base,data=data_LR,K=10)$delta
model_Both<-step(model_Base,scope=list(upper=model_LR_full,lower=~1),direction="both",trace=F, family = binomial())
cv.glm(model_Both,data=data_LR,K=10)$delta
pre1 = predict(model_Both, newdata = myData1, type = "response")
print(pre1)
savehistory("C:/Users/goswa/Desktop/Projectmodel.Rhistory")
